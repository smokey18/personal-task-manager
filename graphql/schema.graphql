"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String
            @eq
            @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)
}

"Account of a person who utilizes this application."
type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    tasks: [Task!]! @hasMany
}

type Task {
    id: ID @id
    title: String!
    description: String!
    due_date: DateTime!
    status: String!
    user: User! @belongsTo
}

type Query {
    tasks: [Task!]! @all
    task(id: Int! @eq): Task @find
}

type Mutation {
    createTask(
        title: String!
        description: String
        due_date: DateTime
        status: String!
    ): Task!
    updateTask(
        id: ID!
        title: String
        description: String
        due_date: DateTime
        status: String
    ): Task!
    deleteTask(id: ID!): Boolean!
}
